[{"/home/flaviota/Documentos/SenseChallenge/frontend/src/index.js":"1","/home/flaviota/Documentos/SenseChallenge/frontend/src/App.js":"2","/home/flaviota/Documentos/SenseChallenge/frontend/src/styles/GlobalStyle.js":"3","/home/flaviota/Documentos/SenseChallenge/frontend/src/context/globalContext.js":"4","/home/flaviota/Documentos/SenseChallenge/frontend/src/styles/Layouts.js":"5","/home/flaviota/Documentos/SenseChallenge/frontend/src/Components/Navigation/Navigation.js":"6","/home/flaviota/Documentos/SenseChallenge/frontend/src/Components/Expenses/Expenses.js":"7","/home/flaviota/Documentos/SenseChallenge/frontend/src/Components/Income/Income.js":"8","/home/flaviota/Documentos/SenseChallenge/frontend/src/Components/Dashboard/Dashboard.js":"9","/home/flaviota/Documentos/SenseChallenge/frontend/src/Components/Orb/Orb.js":"10","/home/flaviota/Documentos/SenseChallenge/frontend/src/Components/LoginPage/LoginPage.js":"11","/home/flaviota/Documentos/SenseChallenge/frontend/src/Components/Expenses/ExpenseForm.js":"12","/home/flaviota/Documentos/SenseChallenge/frontend/src/utils/useWindowSize.js":"13","/home/flaviota/Documentos/SenseChallenge/frontend/src/utils/Icons.js":"14","/home/flaviota/Documentos/SenseChallenge/frontend/src/utils/menuItems.js":"15","/home/flaviota/Documentos/SenseChallenge/frontend/src/Components/Form/Form.js":"16","/home/flaviota/Documentos/SenseChallenge/frontend/src/History/History.js":"17","/home/flaviota/Documentos/SenseChallenge/frontend/src/Components/IncomeItem/IncomeItem.js":"18","/home/flaviota/Documentos/SenseChallenge/frontend/src/Components/Chart/Chart.js":"19","/home/flaviota/Documentos/SenseChallenge/frontend/src/utils/dateFormat.js":"20","/home/flaviota/Documentos/SenseChallenge/frontend/src/Components/Button/Button.js":"21"},{"size":408,"mtime":1694978798007,"results":"22","hashOfConfig":"23"},{"size":2152,"mtime":1694978798003,"results":"24","hashOfConfig":"23"},{"size":1271,"mtime":1695003075177,"results":"25","hashOfConfig":"23"},{"size":2836,"mtime":1694978798007,"results":"26","hashOfConfig":"23"},{"size":238,"mtime":1694978798007,"results":"27","hashOfConfig":"23"},{"size":2951,"mtime":1695001488736,"results":"28","hashOfConfig":"23"},{"size":2522,"mtime":1694978798003,"results":"29","hashOfConfig":"23"},{"size":2408,"mtime":1694978798003,"results":"30","hashOfConfig":"23"},{"size":5234,"mtime":1695004845787,"results":"31","hashOfConfig":"23"},{"size":924,"mtime":1695002404755,"results":"32","hashOfConfig":"23"},{"size":5637,"mtime":1695000252226,"results":"33","hashOfConfig":"23"},{"size":4672,"mtime":1694978798003,"results":"34","hashOfConfig":"23"},{"size":494,"mtime":1694978798011,"results":"35","hashOfConfig":"23"},{"size":1904,"mtime":1694978798007,"results":"36","hashOfConfig":"23"},{"size":552,"mtime":1694978798011,"results":"37","hashOfConfig":"23"},{"size":4585,"mtime":1694978798003,"results":"38","hashOfConfig":"23"},{"size":1582,"mtime":1694978798007,"results":"39","hashOfConfig":"23"},{"size":4667,"mtime":1694978798003,"results":"40","hashOfConfig":"23"},{"size":1769,"mtime":1694978798003,"results":"41","hashOfConfig":"23"},{"size":113,"mtime":1694978798011,"results":"42","hashOfConfig":"23"},{"size":655,"mtime":1694978798003,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"4ma86m",{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"47"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"47"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"47"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"47"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"47"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"/home/flaviota/Documentos/SenseChallenge/frontend/src/index.js",[],[],[],"/home/flaviota/Documentos/SenseChallenge/frontend/src/App.js",[],[],"/home/flaviota/Documentos/SenseChallenge/frontend/src/styles/GlobalStyle.js",[],[],"/home/flaviota/Documentos/SenseChallenge/frontend/src/context/globalContext.js",["113","114","115","116"],[],"import React, { useContext, useState } from \"react\"\nimport axios from 'axios'\n\n\nconst BASE_URL = \"http://localhost:5000/api/v1/\";\n\n\nconst GlobalContext = React.createContext()\n\nexport const GlobalProvider = ({children}) => {\n\n    const [incomes, setIncomes] = useState([])\n    const [expenses, setExpenses] = useState([])\n    const [error, setError] = useState(null)\n\n    //calculate incomes\n    const addIncome = async (income) => {\n        const response = await axios.post(`${BASE_URL}add-income`, income)\n            .catch((err) =>{\n                setError(err.response.data.message)\n            })\n        getIncomes()\n    }\n\n    const getIncomes = async () => {\n        const response = await axios.get(`${BASE_URL}get-incomes`)\n        setIncomes(response.data)\n        console.log(response.data)\n    }\n\n    const deleteIncome = async (id) => {\n        const res  = await axios.delete(`${BASE_URL}delete-income/${id}`)\n        getIncomes()\n    }\n\n    const totalIncome = () => {\n        let totalIncome = 0;\n        incomes.forEach((income) =>{\n            totalIncome = totalIncome + income.amount\n        })\n\n        return totalIncome;\n    }\n\n\n    //calculate incomes\n    const addExpense = async (income) => {\n        const response = await axios.post(`${BASE_URL}add-expense`, income)\n            .catch((err) =>{\n                setError(err.response.data.message)\n            })\n        getExpenses()\n    }\n\n    const getExpenses = async () => {\n        const response = await axios.get(`${BASE_URL}get-expenses`)\n        setExpenses(response.data)\n        console.log(response.data)\n    }\n\n    const deleteExpense = async (id) => {\n        const res  = await axios.delete(`${BASE_URL}delete-expense/${id}`)\n        getExpenses()\n    }\n\n    const totalExpenses = () => {\n        let totalIncome = 0;\n        expenses.forEach((income) =>{\n            totalIncome = totalIncome + income.amount\n        })\n\n        return totalIncome;\n    }\n\n\n    const totalBalance = () => {\n        return totalIncome() - totalExpenses()\n    }\n\n    const transactionHistory = () => {\n        const history = [...incomes, ...expenses]\n        history.sort((a, b) => {\n            return new Date(b.createdAt) - new Date(a.createdAt)\n        })\n\n        return history.slice(0, 3)\n    }\n\n\n    return (\n        <GlobalContext.Provider value={{\n            addIncome,\n            getIncomes,\n            incomes,\n            deleteIncome,\n            expenses,\n            totalIncome,\n            addExpense,\n            getExpenses,\n            deleteExpense,\n            totalExpenses,\n            totalBalance,\n            transactionHistory,\n            error,\n            setError\n        }}>\n            {children}\n        </GlobalContext.Provider>\n    )\n}\n\nexport const useGlobalContext = () =>{\n    return useContext(GlobalContext)\n}","/home/flaviota/Documentos/SenseChallenge/frontend/src/styles/Layouts.js",[],[],"/home/flaviota/Documentos/SenseChallenge/frontend/src/Components/Navigation/Navigation.js",["117","118"],[],"/home/flaviota/Documentos/SenseChallenge/frontend/src/Components/Expenses/Expenses.js",["119","120","121"],[],"import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { useGlobalContext } from '../../context/globalContext';\nimport { InnerLayout } from '../../styles/Layouts';\nimport Form from '../Form/Form';\nimport IncomeItem from '../IncomeItem/IncomeItem';\n\nimport ExpenseForm from './ExpenseForm';\n\nfunction Expenses() {\n    const {addIncome,expenses, getExpenses, deleteExpense, totalExpenses} = useGlobalContext()\n\n    useEffect(() =>{\n        getExpenses()\n    }, [])\n    return (\n        <ExpenseStyled>\n            <InnerLayout>\n                <h1>Gastos</h1>\n                <h2 className=\"total-income\">Total de gastos: <span>R$ {totalExpenses()}</span></h2>\n                <div className=\"income-content\">\n                    <div className=\"form-container\">\n                        <ExpenseForm />\n                    </div>\n                    <div className=\"incomes\">\n                        {expenses.map((income) => {\n                            const {_id, title, amount, date, category, description, type} = income;\n                            console.log(income)\n                            return <IncomeItem\n                                key={_id}\n                                id={_id} \n                                title={title} \n                                description={description} \n                                amount={amount} \n                                date={date} \n                                type={type}\n                                category={category} \n                                indicatorColor=\"var(--color-green)\"\n                                deleteItem={deleteExpense}\n                            />\n                        })}\n                    </div>\n                </div>\n            </InnerLayout>\n        </ExpenseStyled>\n    )\n}\n\nconst ExpenseStyled = styled.div`\n    display: flex;\n    overflow: auto;\n    .total-income{\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        background: #FCF6F9;\n        border: 2px solid #FFFFFF;\n        box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n        border-radius: 20px;\n        padding: 1rem;\n        margin: 1rem 0;\n        font-size: 2rem;\n        gap: .5rem;\n        span{\n            font-size: 2.5rem;\n            font-weight: 800;\n            color: var(--color-green);\n        }\n    }\n    .income-content{\n        display: flex;\n        gap: 2rem;\n        .incomes{\n            flex: 1;\n        }\n    }\n`;\n\nexport default Expenses","/home/flaviota/Documentos/SenseChallenge/frontend/src/Components/Income/Income.js",["122","123"],[],"import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { useGlobalContext } from '../../context/globalContext';\nimport { InnerLayout } from '../../styles/Layouts';\nimport Form from '../Form/Form';\nimport IncomeItem from '../IncomeItem/IncomeItem';\n\nfunction Income() {\n    const {addIncome,incomes, getIncomes, deleteIncome, totalIncome} = useGlobalContext()\n\n    useEffect(() =>{\n        getIncomes()\n    }, [])\n    return (\n        <IncomeStyled>\n            <InnerLayout>\n                <h1>Ganhos</h1>\n                <h2 className=\"total-income\">Total de ganhos: <span>R$ {totalIncome()}</span></h2>\n                <div className=\"income-content\">\n                    <div className=\"form-container\">\n                        <Form />\n                    </div>\n                    <div className=\"incomes\">\n                        {incomes.map((income) => {\n                            const {_id, title, amount, date, category, description, type} = income;\n                            return <IncomeItem\n                                key={_id}\n                                id={_id} \n                                title={title} \n                                description={description} \n                                amount={amount} \n                                date={date} \n                                type={type}\n                                category={category} \n                                indicatorColor=\"var(--color-green)\"\n                                deleteItem={deleteIncome}\n                            />\n                        })}\n                    </div>\n                </div>\n            </InnerLayout>\n        </IncomeStyled>\n    )\n}\n\nconst IncomeStyled = styled.div`\n    display: flex;\n    overflow: auto;\n    .total-income{\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        background: #FCF6F9;\n        border: 2px solid #FFFFFF;\n        box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n        border-radius: 20px;\n        padding: 1rem;\n        margin: 1rem 0;\n        font-size: 2rem;\n        gap: .5rem;\n        span{\n            font-size: 2.5rem;\n            font-weight: 800;\n            color: var(--color-green);\n        }\n    }\n    .income-content{\n        display: flex;\n        gap: 2rem;\n        .incomes{\n            flex: 1;\n        }\n    }\n`;\n\nexport default Income","/home/flaviota/Documentos/SenseChallenge/frontend/src/Components/Dashboard/Dashboard.js",["124"],[],"/home/flaviota/Documentos/SenseChallenge/frontend/src/Components/Orb/Orb.js",[],[],"/home/flaviota/Documentos/SenseChallenge/frontend/src/Components/LoginPage/LoginPage.js",["125"],[],"/home/flaviota/Documentos/SenseChallenge/frontend/src/Components/Expenses/ExpenseForm.js",[],[],"/home/flaviota/Documentos/SenseChallenge/frontend/src/utils/useWindowSize.js",[],[],"/home/flaviota/Documentos/SenseChallenge/frontend/src/utils/Icons.js",[],[],"/home/flaviota/Documentos/SenseChallenge/frontend/src/utils/menuItems.js",["126"],[],"import {dashboard, expenses, transactions, trend} from '../utils/Icons'\n\nexport const menuItems = [\n    {\n        id: 1,\n        title: 'Visão geral',\n        icon: dashboard,\n        link: '/dashboard'\n    },\n   \n    {\n        id: 3,\n        title: \"Meus gastos\",\n        icon: trend,\n        link: \"/dashboard\",\n    },\n    {\n        id: 4,\n        title: \"Meus ganhos\",\n        icon: expenses,\n        link: \"/dashboard\",\n    },                                                                                                                       \n]","/home/flaviota/Documentos/SenseChallenge/frontend/src/Components/Form/Form.js",["127"],[],"import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport DatePicker from 'react-datepicker'\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useGlobalContext } from '../../context/globalContext';\nimport Button from '../Button/Button';\nimport { plus } from '../../utils/Icons';\n\n\nfunction Form() {\n    const {addIncome, getIncomes, error, setError} = useGlobalContext()\n    const [inputState, setInputState] = useState({\n        title: '',\n        amount: '',\n        date: '',\n        category: '',\n        description: '',\n    })\n\n    const { title, amount, date, category,description } = inputState;\n\n    const handleInput = name => e => {\n        setInputState({...inputState, [name]: e.target.value})\n        setError('')\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        addIncome(inputState)\n        setInputState({\n            title: '',\n            amount: '',\n            date: '',\n            category: '',\n            description: '',\n        })\n    }\n\n    return (\n        <FormStyled onSubmit={handleSubmit}>\n            {error && <p className='error'>{error}</p>}\n            <div className=\"input-control\">\n                <input \n                    type=\"text\" \n                    value={title}\n                    name={'title'} \n                    placeholder=\"Título da renda\"\n                    onChange={handleInput('title')}\n                />\n            </div>\n            <div className=\"input-control\">\n                <input value={amount}  \n                    type=\"text\" \n                    name={'amount'} \n                    placeholder={'Valor'}\n                    onChange={handleInput('amount')} \n                />\n            </div>\n            <div className=\"input-control\">\n                <DatePicker \n                    id='date'\n                    placeholderText='Escolha a data'\n                    selected={date}\n                    dateFormat=\"dd/MM/yyyy\"\n                    onChange={(date) => {\n                        setInputState({...inputState, date: date})\n                    }}\n                />\n            </div>\n            <div className=\"selects input-control\">\n                <select required value={category} name=\"category\" id=\"category\" onChange={handleInput('category')}>\n                    <option value=\"\"  disabled >Selecione</option>\n                    <option value=\"salary\">Salário</option>\n                    <option value=\"freelancing\">Freelance</option>\n                    <option value=\"investments\">Investimentos</option>\n                    <option value=\"stocks\">Ações</option>\n                    <option value=\"bitcoin\">Bitcoin</option>\n                    <option value=\"bank\">Transferências bancárias</option>  \n                    <option value=\"other\">Outros tipos</option>  \n                </select>\n            </div>\n            <div className=\"input-control\">\n                <textarea name=\"description\" value={description} placeholder='Descrição geral' id=\"description\" cols=\"30\" rows=\"4\" onChange={handleInput('description')}></textarea>\n            </div>\n            <div className=\"submit-btn\">\n                <Button \n                    name={'Adicionar'}\n                    icon={plus}\n                    bPad={'.8rem 1.6rem'}\n                    bRad={'30px'}\n                    bg={'var(--color-accent'}\n                    color={'#fff'}\n                />\n            </div>\n        </FormStyled>\n    )\n}\n\n\nconst FormStyled = styled.form`\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n    input, textarea, select{\n        font-family: inherit;\n        font-size: inherit;\n        outline: none;\n        border: none;\n        padding: .5rem 1rem;\n        border-radius: 5px;\n        border: 2px solid #fff;\n        background: transparent;\n        resize: none;\n        box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n        color: rgba(34, 34, 96, 0.9);\n        &::placeholder{\n            color: rgba(34, 34, 96, 0.4);\n        }\n    }\n    .input-control{\n        input{\n            width: 100%;\n        }\n    }\n\n    .selects{\n        display: flex;\n        justify-content: flex-end;\n        select{\n            color: rgba(34, 34, 96, 0.4);\n            &:focus, &:active{\n                color: rgba(34, 34, 96, 1);\n            }\n        }\n    }\n\n    .submit-btn{\n        button{\n            box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n            &:hover{\n                background: var(--color-green) !important;\n            }\n        }\n    }\n`;\nexport default Form","/home/flaviota/Documentos/SenseChallenge/frontend/src/History/History.js",[],[],"/home/flaviota/Documentos/SenseChallenge/frontend/src/Components/IncomeItem/IncomeItem.js",[],[],"/home/flaviota/Documentos/SenseChallenge/frontend/src/Components/Chart/Chart.js",[],[],"/home/flaviota/Documentos/SenseChallenge/frontend/src/utils/dateFormat.js",[],[],"/home/flaviota/Documentos/SenseChallenge/frontend/src/Components/Button/Button.js",[],[],{"ruleId":"128","severity":1,"message":"129","line":18,"column":15,"nodeType":"130","messageId":"131","endLine":18,"endColumn":23},{"ruleId":"128","severity":1,"message":"132","line":32,"column":15,"nodeType":"130","messageId":"131","endLine":32,"endColumn":18},{"ruleId":"128","severity":1,"message":"129","line":48,"column":15,"nodeType":"130","messageId":"131","endLine":48,"endColumn":23},{"ruleId":"128","severity":1,"message":"132","line":62,"column":15,"nodeType":"130","messageId":"131","endLine":62,"endColumn":18},{"ruleId":"128","severity":1,"message":"133","line":1,"column":17,"nodeType":"130","messageId":"131","endLine":1,"endColumn":25},{"ruleId":"128","severity":1,"message":"134","line":4,"column":10,"nodeType":"130","messageId":"131","endLine":4,"endColumn":17},{"ruleId":"128","severity":1,"message":"135","line":5,"column":8,"nodeType":"130","messageId":"131","endLine":5,"endColumn":12},{"ruleId":"128","severity":1,"message":"136","line":11,"column":12,"nodeType":"130","messageId":"131","endLine":11,"endColumn":21},{"ruleId":"137","severity":1,"message":"138","line":15,"column":8,"nodeType":"139","endLine":15,"endColumn":10,"suggestions":"140"},{"ruleId":"128","severity":1,"message":"136","line":9,"column":12,"nodeType":"130","messageId":"131","endLine":9,"endColumn":21},{"ruleId":"137","severity":1,"message":"141","line":13,"column":8,"nodeType":"139","endLine":13,"endColumn":10,"suggestions":"142"},{"ruleId":"137","severity":1,"message":"143","line":15,"column":8,"nodeType":"139","endLine":15,"endColumn":10,"suggestions":"144"},{"ruleId":"145","severity":1,"message":"146","line":52,"column":11,"nodeType":"147","endLine":52,"endColumn":27},{"ruleId":"128","severity":1,"message":"148","line":1,"column":30,"nodeType":"130","messageId":"131","endLine":1,"endColumn":42},{"ruleId":"128","severity":1,"message":"149","line":11,"column":23,"nodeType":"130","messageId":"131","endLine":11,"endColumn":33},"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","'res' is assigned a value but never used.","'useState' is defined but never used.","'signout' is defined but never used.","'Form' is defined but never used.","'addIncome' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getExpenses'. Either include it or remove the dependency array.","ArrayExpression",["150"],"React Hook useEffect has a missing dependency: 'getIncomes'. Either include it or remove the dependency array.",["151"],"React Hook useEffect has missing dependencies: 'getExpenses' and 'getIncomes'. Either include them or remove the dependency array.",["152"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'transactions' is defined but never used.","'getIncomes' is assigned a value but never used.",{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},"Update the dependencies array to be: [getExpenses]",{"range":"159","text":"160"},"Update the dependencies array to be: [getIncomes]",{"range":"161","text":"162"},"Update the dependencies array to be: [getExpenses, getIncomes]",{"range":"163","text":"164"},[491,493],"[getExpenses]",[441,443],"[getIncomes]",[544,546],"[getExpenses, getIncomes]"]